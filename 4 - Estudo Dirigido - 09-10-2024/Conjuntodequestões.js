// 1. Iterar sobre as propriedades de um objeto e exibi-las no console
let objeto = {
    Nome: "Jo√£o",
    Idade: 30,
    Cidade: "S√£o Paulo"
};

for (let propriedade in objeto) {
    console.log(`${propriedade}: ${objeto[propriedade]}`);
}

// 2. Calcular a soma total dos sal√°rios
let salarios = {
    Ana: 3000, 
    Bruno: 2500, 
    Carla: 4000 
};
let totalSalarios = 0;

for (let pessoa in salarios) {
    console.log(`Sal√°rio de ${pessoa}: R$ ${salarios[pessoa]}`);
    totalSalarios += salarios[pessoa];
}

console.log("Total dos sal√°rios: R$", totalSalarios);

// 3. Exibir alunos que passaram e reprovaram (nota >= 7)
let notasAlunos = {
    Pedro: 6,
    Maria: 8,
    Jo√£o: 7,
    Carla: 5
};

let alunosAprovados = [];
let alunosReprovados = [];

for (let aluno in notasAlunos) {
    if (notasAlunos[aluno] >= 7) {
        alunosAprovados.push({ nome: aluno, nota: notasAlunos[aluno] });
    } else {
        alunosReprovados.push({ nome: aluno, nota: notasAlunos[aluno] });
    }
}

console.log("Alunos Aprovados:");
alunosAprovados.forEach(aluno => {
    console.log(`${aluno.nome} passou com nota ${aluno.nota}`);
});

console.log("\nAlunos Reprovados:");
alunosReprovados.forEach(aluno => {
    console.log(`${aluno.nome} reprovou com nota ${aluno.nota}`);
});

// 4. Agrupar pessoas por faixa et√°ria
let pessoas = [
    { nome: "Alice", idade: 18 },
    { nome: "Bruno", idade: 25 },
    { nome: "Carlos", idade: 42 },
    { nome: "Diana", idade: 15 },
    { nome: "Eduardo", idade: 37 },
    { nome: "F√°tima", idade: 50 }
];

// Etapa 1: Lista de todos os usu√°rios e suas idades na ordem de registro
let listaUsuarios = pessoas.map(pessoa => `${pessoa.nome} (${pessoa.idade} anos)`);
console.log("Lista de Usu√°rios e Idades:", listaUsuarios.join(", "));

// Etapa 2: Explicar como a classifica√ß√£o √© feita
console.log("\nA classifica√ß√£o √© feita com base nas regras a seguir:");
console.log("Jovens: at√© 20 anos");
console.log("Adultos: de 21 a 40 anos");
console.log("Idosos: acima de 40 anos");

// Etapa 3: Classifica√ß√£o dos usu√°rios por faixa et√°ria
let grupos = { jovens: [], adultos: [], idosos: [] };

for (let pessoa of pessoas) {
    if (pessoa.idade <= 20) {
        grupos.jovens.push(pessoa);
    } else if (pessoa.idade <= 40) {
        grupos.adultos.push(pessoa);
    } else {
        grupos.idosos.push(pessoa);
    }
}

// Exibir a classifica√ß√£o por faixa et√°ria
console.log("\nClassifica√ß√£o por Faixa Et√°ria:");

console.log("Jovens:", grupos.jovens.map(pessoa => `${pessoa.nome} (${pessoa.idade} anos)`).join(", "));

console.log("Adultos:", grupos.adultos.map(pessoa => `${pessoa.nome} (${pessoa.idade} anos)`).join(", "));

console.log("Idosos:", grupos.idosos.map(pessoa => `${pessoa.nome} (${pessoa.idade} anos)`).join(", "));

// 5. Criar objeto com produtos e quantidades em estoque
let estoque = {
    "Arroz": 20,
    "Feij√£o": 15,
    "Macarr√£o": 30,
    "A√ß√∫car": 10
};

// Fun√ß√£o para vender um produto
function venderProduto(produto) {
    if (estoque[produto] > 0) {
        estoque[produto]--;  // Diminui a quantidade em 1
        console.log(`‚úÖ ${produto} vendido! Quantidade restante: ${estoque[produto]}`);
    } else {
        console.log(`‚ùå Desculpe, ${produto} est√° fora de estoque!`);
    }
}

// Simulando vendas
let produtosVendidos = ["Arroz", "Feij√£o", "A√ß√∫car", "Arroz", "Macarr√£o", "Arroz", "A√ß√∫car", "Feij√£o", "Feij√£o"];

// La√ßo para processar as vendas
console.log("üì¶ Iniciando as vendas...\n");
for (let produto of produtosVendidos) {
    venderProduto(produto);
}

// Exibir estoque final
console.log("\nüìä Estoque final:");
for (let produto in estoque) {
    console.log(`- ${produto}: ${estoque[produto]} unidade(s)`);
}

// 6. Encontrar a maior e a menor nota
let notas = { Ana: 7, Pedro: 5, Carla: 9, Jo√£o: 6 };

// Inicializar vari√°veis para armazenar a maior e a menor nota
let maiorNota = -Infinity;
let menorNota = Infinity;

// La√ßo para percorrer as notas dos alunos
for (let aluno in notas) {
    if (notas[aluno] > maiorNota) {
        maiorNota = notas[aluno];  // Atualiza a maior nota
    }
    if (notas[aluno] < menorNota) {
        menorNota = notas[aluno];  // Atualiza a menor nota
    }
}

// Exibir resultados
console.log("üìä Resultados das Notas:");
console.log("Maior nota:", maiorNota);
console.log("Menor nota:", menorNota);

// 7. Calcular a m√©dia salarial
let funcionarios = {
    "Ana": 3000,
    "Bruno": 2500,
    "Carla": 4000,
    "Diana": 3200,
    "Eduardo": 2800
};

// Vari√°veis para calcular total e m√©dia salarial
let totalSalarios = 0;
let quantidadeFuncionarios = 0;

// Exibir sal√°rios e calcular total e m√©dia
console.log("üìã Lista de Funcion√°rios e seus Sal√°rios:");
for (let funcionario in funcionarios) {
    console.log(`- ${funcionario}: R$ ${funcionarios[funcionario].toFixed(2)}`); // Exibe o sal√°rio de cada funcion√°rio
    totalSalarios += funcionarios[funcionario]; // Soma dos sal√°rios
    quantidadeFuncionarios++; // Contagem de funcion√°rios
}

// Calcular m√©dia salarial
let mediaSalarial = totalSalarios / quantidadeFuncionarios;

// Exibir resultados finais
console.log("\nüí∞ Total da Soma dos Sal√°rios: R$ " + totalSalarios.toFixed(2));

console.log("üìä M√©dia Salarial: R$ " + mediaSalarial.toFixed(2));

// 8. Calcular o total de itens na lista de compras
let listaCompras = [
    { produto: "arroz", quantidade: 2 },
    { produto: "feij√£o", quantidade: 3 },
    { produto: "macarr√£o", quantidade: 1 }
];

let totalItens = 0;

// Exibir a lista de produtos e suas quantidades
console.log("üõí Lista de Compras:");
for (let item of listaCompras) {
    console.log(`- ${item.quantidade}x ${item.produto}`);
    totalItens += item.quantidade; // Soma a quantidade total de itens
}

// Exibir o total de itens
console.log("\nüì¶ Total de itens na lista de compras:", totalItens);

// 9. Contar caracteres em uma string
function contarCaracteres(str) {
    let contagem = {};
    for (let char of str) {
        contagem[char] = (contagem[char] || 0) + 1; // Incrementa a contagem de cada caractere
    }
    return contagem;
}

// Testando a fun√ß√£o
const texto = "javascript";
const resultado = contarCaracteres(texto);

// Exibir a contagem de caracteres de forma formatada
console.log(`üî† Contagem de caracteres na string '${texto}':`);
for (let char in resultado) {
    console.log(`- '${char}': ${resultado[char]}`);
}

// 10. Aplicar desconto de 15% em produtos com pre√ßo > R$ 100
let produtos = { cadeira: 150, mesa: 200, caneca: 50 };

// Exibir pre√ßos antes do desconto
console.log("üí∞ Pre√ßos antes do desconto:", produtos);

// Aplicar desconto
for (let item in produtos) {
    if (produtos[item] > 100) {
        produtos[item] *= 0.85; // Aplica o desconto de 15%
    }
}

// Exibir pre√ßos ap√≥s o desconto
console.log("üí∏ Pre√ßos ap√≥s desconto:", produtos);

// 11. Contar caracteres em cada string do array
let palavras = ["ma√ß√£", "banana", "uva"];

// Fun√ß√£o para contar caracteres em cada palavra do array
function contarCaracteresArray(arr) {
    let resultado = {};
    for (let palavra of arr) {
        resultado[palavra] = palavra.length; // Conta os caracteres e armazena no objeto
    }
    return resultado;
}

// Chama a fun√ß√£o e exibe a contagem de caracteres
console.log("üìè Contagem de caracteres em cada palavra:", contarCaracteresArray(palavras));

// 12. Reposi√ß√£o autom√°tica de estoque
let estoqueProdutos = { caneta: 3, borracha: 10, l√°pis: 2 }; // Estoque inicial de produtos

// Percorre cada produto no estoque
for (let produto in estoqueProdutos) {
    // Verifica se a quantidade em estoque √© menor que 5
    if (estoqueProdutos[produto] < 5) {
        estoqueProdutos[produto] += 10; // Reposi√ß√£o de 10 unidades
    }
}

// Fun√ß√£o para exibir o estoque antes e depois da reposi√ß√£o
function reposicaoEstoque(estoqueProdutos) {
    // Exibir estoque antes da reposi√ß√£o
    console.log("üì¶ Estoque antes da reposi√ß√£o:", estoqueProdutos);

    // Reposi√ß√£o autom√°tica de estoque
    for (let produto in estoqueProdutos) {
        // Verifica se a quantidade em estoque √© menor que 5
        if (estoqueProdutos[produto] < 5) {
            estoqueProdutos[produto] += 10; // Reposi√ß√£o de 10 unidades
        }
    }

    // Exibir estoque ap√≥s a reposi√ß√£o
    console.log("üì¶ Estoque ap√≥s reposi√ß√£o:", estoqueProdutos);
}

// Chamar a fun√ß√£o para mostrar o estoque
reposicaoEstoque(estoqueProdutos);

// 13. Calcular a m√©dia de notas de cada aluno

// Fun√ß√£o para exibir notas e calcular a m√©dia de cada aluno
function exibirNotasECalcularMedia(notasAlunosProvas) {
    for (let aluno in notasAlunosProvas) {
        // Exibir notas do aluno
        console.log(`üìù Notas de ${aluno}: ${notasAlunosProvas[aluno].join(", ")}`);
        
        // Calcular a m√©dia
        let somaNotas = 0;
        for (let nota of notasAlunosProvas[aluno]) {
            somaNotas += nota; // Soma das notas
        }
        let media = somaNotas / notasAlunosProvas[aluno].length; // C√°lculo da m√©dia
        
        // Exibir a m√©dia
        console.log(`üìö M√©dia de ${aluno}: ${media.toFixed(2)}`);
        console.log(""); // Linha em branco para melhor separa√ß√£o
    }
}

// Objeto contendo as notas dos alunos
let notasAlunosProvas = {
    Ana: [8, 7, 9],
    Bruno: [5, 6, 7],
    Carla: [10, 8, 9]
};

// Chamar a fun√ß√£o para exibir notas e calcular as m√©dias
exibirNotasECalcularMedia(notasAlunosProvas);

// 14. Contar produtos vendidos

let vendas = ["caneta", "caderno", "caneta", "borracha", "caneta"];

function contarVendas(arr) {
    let contagemVendas = {};
    for (let produto of arr) {
        contagemVendas[produto] = (contagemVendas[produto] || 0) + 1;
    }
    return contagemVendas;
}

// Chamada da fun√ß√£o
let resultadoVendas = contarVendas(vendas);

// Exibir contagem de produtos vendidos
console.log("üõçÔ∏è Contagem de produtos vendidos:");
for (let produto in resultadoVendas) {
    console.log(`- ${produto}: ${resultadoVendas[produto]} unidade(s)`);
}

// Exibir resumo total de produtos vendidos
let totalProdutos = Object.values(resultadoVendas).reduce((acc, curr) => acc + curr, 0);
console.log(`\nüìä Total de produtos vendidos: ${totalProdutos} unidade(s)`);

// 15. Filtrar produtos com pre√ßo acima de R$ 100
let produtosPreco = { celular: 120, fone: 80, monitor: 150 };
let produtosCaros = {};

// Filtra produtos com pre√ßo acima de R$ 100
for (const [produto, preco] of Object.entries(produtosPreco)) {
    // Verifica se o pre√ßo √© v√°lido
    if (typeof preco === 'number' && preco > 100) {
        produtosCaros[produto] = preco; // Adiciona produtos caros
    }
}

// Exibe os produtos caros de forma formatada
if (Object.keys(produtosCaros).length > 0) {
    console.log("üí∞ Produtos caros:");
    for (const [produto, preco] of Object.entries(produtosCaros)) {
        console.log(`- ${produto}: R$ ${preco.toFixed(2)}`);
    }
} else {
    console.log("üõë Nenhum produto caro encontrado.");
}